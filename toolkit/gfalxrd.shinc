#!/bin/bash

function setupproxy()
{
    [[ "$(ls -lt /tmp/ | grep --color=no $USER | grep --color=no -m 1 x509)x" == x ]] && { voms-proxy-init --voms cms --valid 168:00 ; }
    # LD_LIBRARY_PATH='' ; PYTHONPATH='' ;
}
export -f setupproxy

export XRDP=root://cms-xrd-global.cern.ch/
export MITP=root://xrootd.cmsaf.mit.edu/
export EOSP=root://eoscms.cern.ch/

function storerl() {
    INPUT=$1
    [[ $1 != /* ]] && INPUT=$PWD/${1}
    SPATH=$INPUT

    [[ $INPUT == /mnt/T2_US_MIT/hadoop* ]] && { SPATH=${1#/mnt/T2_US_MIT/hadoop/cms} ; }
    [[ $INPUT == /mnt/hadoop* ]] && { SPATH=${1#/mnt/hadoop/cms} ; }
    # /store/...
    [[ $SPATH == /store/* ]] || { echo $1 ;  return 1 ; }
    [[ $2 == mit ]] && echo root://xrootd.cmsaf.mit.edu:1094/$SPATH || {
            echo $XRDP$SPATH ;
        }

    [[ $INPUT == */store* ]] && {
        pref=${INPUT%%/store*}
        SPATH=${INPUT##$pref}
        echo $SPATH
    } || {
        echo $INPUT
    }
    return 0
}
export -f storerl

function xrdrl()
{
    SPATH=$(storerl $1)

    [[ $SPATH == /store* ]] && {
        echo $XRDP$SPATH
    } || {
        echo $SPATH
    }
    return 0
}
export -f xrdrl

function xrdcpp()
{
    setupproxy
    SPATH=$(xrdrl $1)
    echo $SPATH
    [[ $? -eq 0 ]] || { echo $SPATH ; return $?; }
    [[ $1 == *.* ]] && { xrdcp $SPATH $2 ; return 0 ; }
    DES=""
    mkdir -p $2
    cd $2
    for i in `ls --color=never $1` ; do { [[ ! -f $i ]] && { echo -e "\e[2m${SPATH}/$i\e[0m" ; xrdcp ${SPATH}/$i . ; } ; }; done ;
    cd -
    return 0
}
export -f xrdcpp


export GFALP=gsiftp://se01.cmsaf.mit.edu:2811/
function gfalrl()
{
    INPUT=$1
    [[ $1 != /* ]] && INPUT=$PWD/$1

    SPATH=$INPUT
    [[ $INPUT == /mnt/T2_US_MIT/hadoop* ]] && { SPATH=${INPUT#/mnt/T2_US_MIT/hadoop} ; }
    [[ $INPUT == /mnt/hadoop* ]] && { SPATH=${INPUT#/mnt/hadoop} ; }
    [[ $INPUT == /store* ]] && { SPATH=/cms$INPUT ; }
    # /cms/store/...
    [[ $SPATH == /cms/store/* ]] || { echo $1 ; return 1 ; }
    echo $GFALP$SPATH
    return 0
}
export -f gfalrl

function gfalcopy()
{
    setupproxy
    SPATH=$(gfalrl $1)
    DPATH=$(gfalrl $2)
    [[ $1 == *.* ]] && { gfal-copy -p ${SPATH} ${DPATH} ; return 0 ; }
    DES=""
    for i in `gfal-ls ${SPATH}` ; do [[ ! -f $DPATH/$DES/$i ]] && { gfal-copy -p ${SPATH}/$i $DPATH/$DES/$i ; } ; done ;
    return 0
}
export -f gfalcopy

function gfalrm()
{
    setupproxy
    SPATH=$(gfalrl $1)
    [[ $? -eq 0 ]] || { echo $SPATH ; return $?; }
    gfal-rm -r $SPATH
    return 0
}
export -f gfalrm

function gfalmkdir()
{
    setupproxy
    SPATH=$(gfalrl $PWD)
    [[ $? -eq 0 ]] || { echo $SPATH ; return $?; }
    gfal-mkdir $SPATH/$1
    return 0
}
export -f gfalrm

