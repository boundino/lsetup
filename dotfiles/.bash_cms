# .bash_cms #

export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

parse_git_branch() { git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' ; }
# export PS1=$'${debian_chroot:+($debian_chroot)}\[\e[38;2;255;255;143;1m\]\u\[\e[38;2;121;113;80m\]:~ \[\e[38;5;153;1m\]\h\[\e[00m\]:\[\e[38;2;205;162;184;1m\]\w\[\e[00m\] \[\e[38;2;170;170;170;1m\](= ^. ^ =)\[\e[00m\]$ '
export PS1=$'\[\e[38;2;255;255;143;1m\]\u\[\e[38;2;121;113;80m\]:~ \[\e[38;5;153;1m\]\h\[\e[00m\]:\[\e[38;2;205;162;184;1m\]\w\[\e[00m\]
\[\e[38;2;45;79;128;1m\]($CMSSW_VERSION):($(parse_git_branch))\[\e[00m\] \[\e[38;2;205;162;184;1m\]${PWD##*/}/\[\e[00m\] \[\e[38;2;170;170;170;1m\](\xE2\x9C\xBF \xCB\xB5\xE2\x97\x95 \xE2\x80\xBF \xE2\x97\x95\xCB\xB5)\[\e[00m\]$ '
export PS4=$'\[\e[38;2;165;255;170;1m\]L${LINENO} + \[\e[0m\]'

# ====== CMSSW / ROOT ====== #

alias root='root -l'
alias crab_setup='source ~/crab_setup.sh'
alias grid_setup='source ~/grid_setup.sh'

# docmsenv
alias cmsver='echo $CMSSW_BASE ; echo $CMSSW_RELEASE_BASE ;'
function docmsenv() {
    oldpwd=$OLDPWD
    thispwd=$PWD
    [[ $# -eq 1 ]] && { [[ -d ~/CMSSW_${1} ]] && { cd ~/CMSSW_${1}/src; cmsenv; echo "$CMSSW_VERSION ==> $PWD"; cd $oldpwd; cd $thispwd; } || { echo "error: CMSSW_$1 env is not set." ; } ; }
    [[ $# -eq 0 ]] && { for i in `ls --color=auto -r -d ~/CMSSW_*` ; do cd $i/src/; cmsenv; echo "$CMSSW_VERSION ==> $PWD"; cd $oldpwd; cd $thispwd; break; done; }
}
export -f docmsenv

export XRDP=root://cms-xrd-global.cern.ch/
function xrdrl()
{
    SPATH=$1
    [[ $1 == /mnt/T2_US_MIT/hadoop* ]] && { SPATH=${1#/mnt/T2_US_MIT/hadoop/cms} ; }
    [[ $1 == /mnt/hadoop* ]] && { SPATH=${1#/mnt/hadoop/cms} ; }
    [[ $SPATH == /store/* ]] || { echo -e "\e[1;31m [xrdrl] error: invalid path \e[1;97;41m$SPATH\e[0m" ;  return 1 ; }
    # /store/...
    echo $XRDP$SPATH
    return 0
}
export -f xrdrl
function xrdcpp()
{
    SPATH=$(xrdrl $1)
    [[ $? -eq 0 ]] || { echo $SPATH ; return $?; }
    xrdcp -r $SPATH $2 
    return 0
}

export GFALP=gsiftp://se01.cmsaf.mit.edu:2811/
function gfalrl()
{
    SPATH=$1
    [[ $1 == /mnt/T2_US_MIT/hadoop* ]] && { SPATH=${1#/mnt/T2_US_MIT/hadoop} ; }
    [[ $1 == /mnt/hadoop* ]] && { SPATH=${1#/mnt/hadoop} ; }
    [[ $1 == /store* ]] && { SPATH=/cms$1 ; }
    # /cms/store/...
    [[ $SPATH == /cms/store/* ]] || { echo -e "\e[1;31m [gfalrl] error: invalid path \e[1;97;41m$SPATH\e[0m" ;  return 1 ; }
    echo $GFALP$SPATH
    return 0
}
export -f gfalrl
function gfalcopy()
{
    SPATH=$(gfalrl $1)
    [[ $? -eq 0 ]] || { echo $SPATH ; return $?; }
    [[ $1 == *.* ]] && { gfal-copy -p ${SPATH} $2/ ; return 0 ; }
    for i in `gfal-ls ${SPATH}` ; do [[ ! -f $2/$i ]] && { gfal-copy -p ${SPATH}/$i $2/$i ; } ; done ;
    # gfal-copy -p -r ${SPATH} $2
    return 0
}

alias sitelist='[[ -f ~/.sites ]] && catt ~/.sites'

# toolkit
alias diffleaf='$HOME/toolkit/diffleaf'