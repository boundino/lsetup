# .bashrc

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]
then
    . /etc/bashrc
fi

# GNU color https://en.wikipedia.org/wiki/ANSI_escape_code
export TERM=xterm-256color
export CLICOLOR=1

# User specific aliases and functions
alias worksp='cd /afs/cern.ch/work/w/wangj'
alias svmithi02='ssh -Y svmithi02'
# alias docmsenv='cd ~/testEverything/CMSSW_10_1_5/src; cmsenv; cd -'
# alias mounteos='eosmount eos/; cd ~/eos/cms/store/group/phys_heavyions/wangj'
alias mounteos='cd /eos/cms/store/group/phys_heavyions/wangj/'
alias eoswangj='cd /eos/user/w/wangj/'
# https://information-technology.web.cern.ch/services/fe/afs/howto/configure-afs-access-rights #
alias checkafsaccess='fs listacl .'
alias json='cd /afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/'

#

##########################################################################
##########################################################################
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=5000
HISTFILESIZE=5000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]
then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
    xterm-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt

force_color_prompt=no

#if [ -n "$force_color_prompt" ]
if [ $force_color_prompt = yes ]
then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null
    then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
        color_prompt=no
    else
        color_prompt=yes
    fi
fi

if [ "$color_prompt" = yes ]
then
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
        ;;
    *)
        ;;
esac

# enable color support of ls and also add handy aliases
#if [ -x /usr/bin/dircolors ]; then
#test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
#alias ls='ls --color=auto'
# alias dir='dir --color=auto'
# alias vdir='vdir --color=auto'

#alias grep='grep --color=auto'
#alias fgrep='fgrep --color=auto'
#alias egrep='egrep --color=auto'
#fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]
then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).

if [ -f /etc/bash_completion ] && ! shopt -oq posix
then
    . /etc/bash_completion
fi

##########################################################################

. ~/.bash_linux
. ~/.bash_cms
. ~/lsetup/toolkit/crabcheck.shinc
