# .bash_linux #

LS_COLORS=$LS_COLORS:'di=38;2;89;193;183:ex=38;2;255;207;92;1:*.h=38;2;128;128;128;1:*.pdf=38;2;1;151;202:*.backup=38;2;60;60;60:ln=38;2;116;110;163;1:*.root=38;2;230;211;208;3:*.highlight=38;5;20;1;48;5;230:*.py=38;2;72;116;81;1:*.log=38;5;15;48;2;71;117;163;1:*.txt=38;5;15;48;2;71;117;163;1:*.output=38;5;15;48;2;71;117;163;1' ; export LS_COLORS
parse_git_branch() { git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' ; }

hname=`echo $(hostname) | awk -F "." '{print $1}'`
[[ $hname == lxplus[89]* || $hname == srv-* ]] && {
    alias emacs='emacs -nw' ; } || {
    [[ -f $HOME/bin/emacs ]] && {
        alias emacs=$HOME'/bin/emacs -nw' ; } || {
        alias emacs='emacs -nw' ; }
}
alias ls='ls --color=yes'
alias ll='ls -lh'
alias lla='ls -alh'
alias la='ls -A'
alias l='ls -CF'
alias lsd='ls -d'
alias ld='du -h --max-depth=1 .'
alias lu='du -sh '
# alias cat='cat'
function rl() {
    [[ $# -gt 1 ]] && {
        for i in $@ ; do readlink -f $i ; done ;
    } || {
        readlink -f $1 ;
    } ;
}
export -f rl
# alias rl='readlink -f'
# alias rm='rm -v'
alias mv='mv -v'
alias cp='cp -v'

function ctf() {
    args=()
    arg_v=0
    for i in $@
    do
        if [[ $i == "-v" ]]; then arg_v=1 ; 
        else args+=($i)
        fi
    done
    summ=0
    for i in ${args[@]}
    do
        countt=$(ls -l $i | grep "^-" | wc -l)
        [[ $arg_v -eq 1 ]] && echo -e "$countt \e[2m($i)\e[0m"
        summ=$(($summ+$countt))
    done
    [[ $arg_v -eq 1 ]] && {
        echo -e "------------"
        echo -e "\e[4;1m$summ\e[0m \e[2m(sum)\e[0m" ; } || {
        echo $summ
    }
}; export -f ctf

function clearfolder() {
    echo -ne "\e[2m" ;
    [[ x$PWD == x$HOME ]] && echo "Stop clearfolder in the home directory." || {
    rm -v `find . -name '*~'` 2> /dev/null ; }
    echo -ne "\e[0m" ;
}; export -f clearfolder

function clearfolder_1layer() {
    for i in "*~" "*.so" "*.d" "*.pcm"
    do 
        [[ -z `ls $i 2> /dev/null` ]] || { 
            echo -ne "\e[2m" ; 
            rm -v $i ; 
            echo -ne "\e[0m" ;
        }
    done
}; export -f clearfolder_1layer

alias cpp='rsync --progress'
alias lns='ln -s'
alias diffw='diff --report-identical-files --old-group-format=$'"'"'\e[38;2;210;106;112;1m%<\e[0m'"'"' --new-group-format=$'"'"'\e[38;2;132;192;127;1m%>\e[0m'"'"' --unchanged-group-format=$'"'"'\e[38;2;128;128;128m%=\e[0m'"'"
alias diffl='diff --report-identical-files --old-group-format=$'"'"'%dn line --@ l %df:\n\e[38;2;210;106;112;1m%<\e[0m'"'"' --new-group-format=$'"'"'%dN line ++@ l %de:\n\e[38;2;132;192;127;1m%>\e[0m'"'"' --unchanged-group-format='"'""'"
alias difff='diff --report-identical-files --old-group-format=$'"'"'\e[38;2;210;106;112;1m%<\e[0m'"'"' --new-group-format=$'"'"'\e[38;2;132;192;127;1m%>\e[0m'"'"' --unchanged-group-format='"'""'"
alias diffu='diff --old-group-format=$'"'"'%dn line --@ l %df:\n%<'"'"' --new-group-format=$'"'"'%dN line ++@ l %de:\n%>'"'"' --unchanged-group-format='"'"'%='"'"
alias grep='grep --color=no'
alias grepc='grep --color=yes'
alias less='less -RMN'
alias ccat='highlight -O ansi --force'
alias psme="ps -efH | grep ^$USER"
alias unpack='tar -xvf'
alias pack='tar -czvf'
alias p3='python3'

# github
function gpush() { git push origin $(parse_git_branch) ; }
export -f gpush
alias gitstatus='git status'
alias gcredential='git config --local credential.helper ""'

packf() {
    par=${1%%'/'}
    name=${par##*/}
    file=${name%%.*}
    ftype=${name##*.}
    [[ x$ftype != x$name ]] && { file=${file}-${ftype} ; }
    tar -czvf ${file}.tar.gz $1
}

# gitlab
function gitlabclonecern() {
    repo=$1
    repo=${repo%%.git}
    repodir=${repo##*/}
    
    git clone --recursive ssh://git@gitlab.cern.ch:7999/${repo}.git
    cd $repodir
    
        echo '
    [user]
        name = wangj
        email = jing.wang@cern.ch
' >> .git/config ;
    cat .git/config
}

catt() { echo -e $(cat "$@" | sed  's/$/\\n/' | sed 's/ /\\a /g') ; }
export -f catt
echoo() { for i in `echo $@` ; do echo $i ; done ; }
export -f echoo

weather() { curl http://wttr.in/${1:-geneva} ; }


# export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}\007"'
export PROMPT_COMMAND='echo -ne "\033]0;${PWD##*/}@${HOSTNAME%%.*}\007"'

function colort() {
    for i in {1..9}
    do
        for j in {0..7}
        do { echo -ne "\e[3${j};${i}m3${j};${i}\e[0m   " ; } ; done ; 
        echo
    done
}
export colort

function colort2() {
    for j in {0..7}
    do
        echo -ne " \e[4${j}m   4${j}    \e[0m "
    done
    echo
    for j in {0..7}
    do
        echo -ne " \e[4${j};1m  4${j};1   \e[0m "
    done
    echo
    for i in {0..7}
    do
        for j in {0..7}
        do
            echo -ne " \e[4${j};3${i}m  4${j};3${i}  \e[0m "
        done
        echo
        for j in {0..7}
        do
            echo -ne " \e[4${j};3${i};1m 4${j};3${i};1 \e[0m "
        done
        echo
    done
}
export colort

function makecc() {
    for i in `ls --color=no ${1}*` ; do
        [[ $i == *.cc || $i == *.C ]] && {
            dotc=$i
            g++ $dotc $(root-config --libs --cflags) -I$HOME -g -o ${dotc%%.*}
        }
    done
}

# toolkit
function cbuildreg() {
    cbuildreg_tmp=root
    [[ x$CMSSW_VERSION == x ]] || {
        [[ -d $HOME/lsetup/toolkit/exec/$CMSSW_VERSION ]] && 
        { cbuildreg_tmp=$CMSSW_VERSION ; } || 
        {
            cbuildreg_tmp=${CMSSW_VERSION##CMSSW_}
            cbuildreg_tmp=${cbuildreg_tmp%%_*}
            cbuildreg_tmp=$(echo $HOME/lsetup/toolkit/exec/CMSSW_${cbuildreg_tmp}*)
            cbuildreg_tmp=${cbuildreg_tmp##*/}
        }
    }
    echo $cbuildreg_tmp
}

alias diffleaf='$HOME/lsetup/toolkit/exec/$(cbuildreg)/diffleaf'
. $HOME/lsetup/toolkit/showdir.shinc
. $HOME/lsetup/toolkit/mcmlink.shinc
. $HOME/lsetup/toolkit/makerun.shinc
. $HOME/lsetup/toolkit/cpdriver.shinc
. $HOME/lsetup/toolkit/json.shinc
. $HOME/lsetup/toolkit/eoscheck.shinc 

alias rmbranch='$HOME/lsetup/toolkit/exec/$(cbuildreg)/rmbranch'
alias addbranch='$HOME/lsetup/toolkit/exec/$(cbuildreg)/addbranch'
alias typetable='$HOME/lsetup/toolkit/exec/$(cbuildreg)/typetable'
alias roocolor='$HOME/lsetup/toolkit/exec/$(cbuildreg)/roocolor'
alias dumpyaml='$HOME/lsetup/toolkit/exec/$(cbuildreg)/dumpyaml'
